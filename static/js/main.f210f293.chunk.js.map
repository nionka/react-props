{"version":3,"sources":["components/star/Star.jsx","components/stars/Stars.jsx","App.js","reportWebVitals.js","index.js"],"names":["Star","fill","height","viewBox","width","xmlns","d","Stars","starsArr","count","Array","className","map","el","index","defaultProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAAe,SAASA,IACpB,OACI,6BACI,sBAAKC,KAAK,UAAUC,OAAO,KAAKC,QAAQ,YAAYC,MAAM,KAAKC,MAAM,6BAArE,UACA,sBAAMC,EAAE,4EACR,sBAAMA,EAAE,gBAAgBL,KAAK,cCF1B,SAASM,EAAT,GAA2B,IAClCC,EADwBC,EAAS,EAATA,MAG5B,OAAIA,EAAQ,GAAKA,EAAQ,GAAsB,mBAAVA,GACjCD,EAAWE,MAAMD,GAAOR,KAAK,QAM7B,oBAAIU,UAAU,6BAAd,SACKH,EAASI,KAAI,SAACC,EAAIC,GAAL,OAAe,cAACd,EAAD,GAAWc,SALrC,KAUfP,EAAMQ,aAAe,CACjBN,MAAO,G,MCPIO,MARf,WACE,OACE,qBAAKL,UAAU,MAAf,SACE,cAACJ,EAAD,CAAOE,MALC,OCSCQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.f210f293.chunk.js","sourcesContent":["export default function Star() {\n    return (\n        <li>\n            <svg fill=\"#D3BCA2\" height=\"28\" viewBox=\"0 0 18 18\" width=\"28\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M9 11.3l3.71 2.7-1.42-4.36L15 7h-4.55L9 2.5 7.55 7H3l3.71 2.64L5.29 14z\"/>\n            <path d=\"M0 0h18v18H0z\" fill=\"none\"/>\n            </svg>\n        </li>\n    )\n}","import Star from '../star/Star';\nimport PropTypes from 'prop-types';\n\nexport default function Stars({ count }) {\n    let starsArr;\n\n    if (count > 0 && count < 6 && typeof count !== 'boolean') {\n        starsArr = Array(count).fill('star');\n    } else {\n        return null;\n    }\n\n    return (\n        <ul className=\"card-body-stars u-clearfix\">\n            {starsArr.map((el, index) => <Star key={index} />)}\n        </ul>\n    )\n}\n\nStars.defaultProps = {\n    count: 0\n}\n\nStars.propTypes = {\n    count: PropTypes.number\n}","import Stars from './components/stars/Stars';\nimport './App.css';\n\nconst count = 5;\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Stars count={count} />   \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}